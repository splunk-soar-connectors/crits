{
  "appid": "ef9cfabb-f011-43c3-bc8b-0ef30a04bf35",
  "name": "CRITs",
  "description": "This App supports various investigative actions on CRITs",
  "publisher": "Phantom",
  "type": "siem",
  "main_module": "crits_connector.pyc",
  "app_version": "1.0.12",
  "utctime_updated": "2017-10-13T23:35:37.000000Z",
  "package_name": "phantom_crits",
  "product_name": "CRITs",
  "product_vendor": "MITRE",
  "product_version_regex": ".*",
  "min_phantom_version": "3.0.251",
  "logo": "crits.png",
  "license": "Copyright (c) Phantom Cyber Corporation 2017",
  "configuration": {
    "url": {
      "description": "Device URL e.g. https://mycrits.contoso.com:8080",
      "data_type": "string",
      "order": 0,
      "required": true
    },
    "verify_server_cert": {
      "data_type": "boolean",
      "description": "Verify server certificate",
      "required": true,
      "order": 1,
      "default": false
    },
    "username": {
      "description": "Username",
      "order": 2,
      "data_type": "string",
      "required": true
    },
    "api_key": {
      "description": "API Key",
      "order": 3,
      "data_type": "password",
      "required": true
    }
  },
  "actions": [
    {
      "action": "test connectivity",
      "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials",
      "type": "test",
      "identifier": "test_asset_connectivity",
      "read_only": true,
      "parameters": {},
      "output": [],
      "versions": "EQ(*)"
    },
    {
      "action": "run query",
      "description": "Run a search query on the CRITs device",
      "verbose": "Query on CRITs is made up of multiple instances of key value pairs, much like the parameters that are specified to an HTTP URL. To keep things simple, the action takes as input each parameter and it's value to match as a JSON dictionary (in string form).<br>For example to search for an indicator of value <b>baddomain.com</b>:<ul><li>Set <b>resource</b> parameter to <b>indicators</b></li><li>The <b>query</b> parameter should be set to <b>{ \"c-value\": \"baddomain.com\" }</b></li></ul>To add more values to match just add the required key value pairs to the <b>query</b> dictionary.<br>While orchrestrating this action from the UI, typing the JSON dictionary should suffice.<br>While automating this action from a playbook, if you are creating a dictionary, then you will require to convert it into a JSON string using the json.loads(...) python function before passing it as the value to the <b>query</b> parameter.<br>If the next page URI is present, the other parameters will be ignored. If it isn't present, the resource to query on field must be present.",
      "type": "investigate",
      "identifier": "run_query",
      "read_only": true,
      "parameters": {
        "resource": {
          "description": "Resource to query on. Required if no Page URI is present",
          "data_type": "string",
          "order": 0,
          "required": false,
          "primary": true,
          "value_list": [
            "actors",
            "actoridentifiers",
            "backdoors",
            "campaigns",
            "certificates",
            "domains",
            "emails",
            "events",
            "exploits",
            "indicators",
            "ips",
            "pcaps",
            "raw_data",
            "samples",
            "screenshots",
            "targets"
          ],
          "contains": [
            "crits resource"
          ]
        },
        "query": {
          "description": "Query to run",
          "data_type": "string",
          "order": 1,
          "required": false,
          "primary": true,
          "contains": [
            "crits query"
          ]
        },
        "limit": {
          "description": "Results per page",
          "data_type": "numeric",
          "order": 2,
          "required": false
        },
        "offset": {
          "description": "Paging offset",
          "data_type": "numeric",
          "order": 3,
          "required": false
        },
        "next_page": {
          "description": "Next page URI",
          "data_type": "string",
          "order": 4,
          "required": false
        }
      },
      "render": {
        "type": "json",
        "width": 10,
        "height": 5,
        "title": "Search Results"
      },
      "output": [
        {
          "data_path": "action_result.data.*._id",
          "data_type": "string",
          "contains": [
            "crits resource id"
          ],
          "column_name": "ID",
          "column_irder": 0
        },
        {
          "data_path": "action_result.data.*.type",
          "data_type": "string",
          "contains": [
            "crits resource"
          ],
          "column_name": "Type",
          "column_irder": 1
        },
        {
          "data_path": "action_result.data.*.lower",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.value",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.impact.rating",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.impact.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.method",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.reference",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.created",
          "data_type": "string",
          "column_name": "Created",
          "column_irder": 2
        },
        {
          "data_path": "action_result.data.*.campaign.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.confidence",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.modified",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.confidence.rating",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.confidence.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.attack_types",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.threat_types",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.value",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.rel_reason",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.relationship",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.rel_confidence",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.relationship_date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.schema_version",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary.total_results",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.parameter.resource",
          "data_type": "string",
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "action_result.parameter.query",
          "data_type": "string",
          "contains": [
            "crits query"
          ]
        },
        {
          "data_path": "action_result.parameter.limit",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.offset",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.next_page",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "versions": "EQ(*)"
    },
    {
      "action": "get resource",
      "description": "Get a specific resource from CRITs",
      "type": "investigate",
      "identifier": "get_resource",
      "read_only": true,
      "parameters": {
        "id": {
          "description": "Resource ID to get",
          "data_type": "string",
          "order": 1,
          "required": true,
          "primary": true,
          "contains": [
            "crits resource id"
          ]
        },
        "resource": {
          "description": "Resource to get",
          "data_type": "string",
          "order": 0,
          "required": true,
          "primary": true,
          "value_list": [
            "actors",
            "actoridentifiers",
            "backdoors",
            "campaigns",
            "certificates",
            "domains",
            "emails",
            "events",
            "exploits",
            "indicators",
            "ips",
            "pcaps",
            "raw_data",
            "samples",
            "screenshots",
            "targets"
          ],
          "contains": [
            "crits resource"
          ]
        }
      },
      "render": {
        "type": "json",
        "width": 10,
        "height": 5,
        "title": "Resource details"
      },
      "output": [
        {
          "data_path": "action_result.data.*._id",
          "data_type": "string",
          "column_name": "ID",
          "column_order": 0,
          "contains": [
            "crits resource id"
          ]
        },
        {
          "data_path": "action_result.data.*.type",
          "data_type": "string",
          "column_name": "Type",
          "column_irder": 1
        },
        {
          "data_path": "action_result.data.*.lower",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.value",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.impact.rating",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.impact.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.method",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.source.*.instances.*.reference",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.created",
          "data_type": "string",
          "column_name": "Created",
          "column_order": 2
        },
        {
          "data_path": "action_result.data.*.campaign.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.confidence",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.campaign.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.modified",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.confidence.rating",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.confidence.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.attack_types",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.threat_types",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.value",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.analyst",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.rel_reason",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.relationship",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.rel_confidence",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.relationships.*.relationship_date",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.schema_version",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.id",
          "data_type": "string",
          "contains": [
            "crits resource id"
          ]
        },
        {
          "data_path": "action_result.parameter.resource",
          "data_type": "string",
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "versions": "EQ(*)"
    },
    {
      "action": "update resource",
      "description": "Update a specified resource",
      "verbose": "The <b>patch_data</b> field expects a json string which will be accepted by the action handler. More information can be found at <a href=\"https://github.com/crits/crits/wiki/Authenticated-API\">this link</a>, in the sections pertaining to updating TLOs using PATCH.",
      "type": "generic",
      "identifier": "update_resource",
      "read_only": true,
      "parameters": {
        "id": {
          "description": "Resource ID to update",
          "data_type": "string",
          "order": 1,
          "required": true,
          "primary": true,
          "contains": [
            "crits resource id"
          ]
        },
        "resource": {
          "description": "Resource type to update",
          "data_type": "string",
          "order": 0,
          "required": true,
          "primary": true,
          "value_list": [
            "actors",
            "actoridentifiers",
            "backdoors",
            "campaigns",
            "certificates",
            "domains",
            "emails",
            "events",
            "exploits",
            "indicators",
            "ips",
            "pcaps",
            "raw_data",
            "samples",
            "screenshots",
            "targets"
          ],
          "contains": [
            "crits resource"
          ]
        },
        "patch_data": {
          "description": "Update JSON Data",
          "data_type": "string",
          "order": 2,
          "required": true
        }
      },
      "render": {
        "width": 12,
        "title": "Update Resource",
        "type": "table",
        "height": 5
      },
      "output": [
        {
          "data_path": "action_result.data.*.id",
          "data_type": "string",
          "example_values": [
            "594813dee1c1dc600ae36138"
          ],
          "contains": [
            "crits resource id"
          ],
          "column_name": "Resource ID",
          "column_order": 0
        },
        {
          "data_path": "action_result.data.*.type",
          "data_type": "string",
          "example_values": [
            "Indicator"
          ],
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "action_result.data.*.message",
          "data_type": "string",
          "example_values": [
            "success!"
          ]
        },
        {
          "data_path": "action_result.data.*.return_code",
          "data_type": "numeric",
          "example_values": [
            0
          ]
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "example_values": [
            "success",
            "failed"
          ]
        },
        {
          "data_path": "action_result.message",
          "data_type": "string",
          "example_values": [
            ""
          ]
        },
        {
          "data_path": "action_result.parameter.id",
          "data_type": "string",
          "example_values": [
            "594813dee1c1dc600ae36138"
          ],
          "contains": [
            "crits resource id"
          ]
        },
        {
          "data_path": "action_result.parameter.resource",
          "data_type": "string",
          "example_values": [
            "indicators"
          ],
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "action_result.parameter.patch_data",
          "data_type": "string",
          "example_values": [
            "{\"action\": \"activity_add\", \"activity\": {\"analyst\": \"admin\", \"start_date\": \"2017-06-23 17:46:36.544590\", \"end_date\": \"2017-06-23 17:46:36.544590\",  \"description\": \"Metal Claws\", \"date\": \"2017-06-23 17:46:36.544590\"}}"
          ]
        },
        {
          "data_path": "action_result.summary",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric",
          "example_values": [
            1
          ]
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric",
          "example_values": [
            1
          ]
        }
      ],
      "versions": "EQ(*)"
    },
    {
      "action": "create resource",
      "description": "Create a resource",
      "verbose": "All resources expect different fields, save a few common fields. The <b>post_data</b> field expects a JSON string. More information can be found at <a href=\"https://github.com/crits/crits/wiki/Authenticated-API\">this link</a>. Each resource has a section outlining it's specific fields.</br>If no confidence is specified, it will default to \"low\".<br> Additionally, you can upload files through the vault to be added to the resource. However, not all resource types will accept a file. If you attempt to add a file to a resource that doesn't accept one, then the action will still succeed and a resource will be created, but the attachment will not be added to it. By default, each file will be added as a 'raw' file. If you wish to change this, for example, to upload a zip file, you can set the 'file_format' attribute in the <b>post_data</b> to 'zip'.",
      "type": "generic",
      "identifier": "create_resource",
      "read_only": true,
      "parameters": {
        "resource": {
          "description": "New Resource Type",
          "data_type": "string",
          "required": true,
          "primary": true,
          "value_list": [
            "actors",
            "actoridentifiers",
            "backdoors",
            "campaigns",
            "certificates",
            "domains",
            "emails",
            "events",
            "exploits",
            "indicators",
            "ips",
            "pcaps",
            "raw_data",
            "samples",
            "screenshots",
            "targets"
          ],
          "contains": [
            "crits resource"
          ],
          "order": 0
        },
        "vault_id": {
          "description": "File to add to resource",
          "data_type": "string",
          "required": false,
          "primary": true,
          "contains": [
            "vault id"
          ],
          "order": 1
        },
        "source": {
          "description": "The Source of the resource",
          "data_type": "string",
          "required": true,
          "order": 2
        },
        "confidence": {
          "description": "Confidence",
          "data_type": "string",
          "required": false,
          "value_list": [
            "low",
            "medium",
            "high"
          ],
          "order": 3
        },
        "post_data": {
          "description": "Post JSON Data",
          "data_type": "string",
          "required": false,
          "order": 4
        }
      },
      "render": {
        "width": 12,
        "title": "Create Resource",
        "type": "table",
        "height": 5
      },
      "output": [
        {
          "data_path": "action_result.data.*.id",
          "data_type": "string",
          "example_values": [
            "594d8e29e1c1dc600ae36164"
          ],
          "contains": [
            "crits resource id"
          ],
          "column_name": "New Resource ID",
          "column_order": 0
        },
        {
          "data_path": "action_result.data.*.url",
          "data_type": "string",
          "example_values": [
            "/api/v1/events/594d8e29e1c1dc600ae36164/"
          ]
        },
        {
          "data_path": "action_result.data.*.type",
          "data_type": "string",
          "example_values": [
            "Event"
          ],
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "action_result.data.*.message",
          "data_type": "string",
          "example_values": [
            "Success!"
          ]
        },
        {
          "data_path": "action_result.data.*.return_code",
          "data_type": "numeric",
          "example_values": [
            0
          ]
        },
        {
          "data_path": "action_result.status",
          "data_type": "string",
          "example_values": [
            "success",
            "failed"
          ]
        },
        {
          "data_path": "action_result.message",
          "data_type": "string",
          "example_values": [
            ""
          ]
        },
        {
          "data_path": "action_result.parameter.source",
          "data_type": "string",
          "example_values": [
            "Phantom"
          ]
        },
        {
          "data_path": "action_result.parameter.vault_id",
          "data_type": "string",
          "example_values": [],
          "contains": [
            "vault id"
          ]
        },
        {
          "data_path": "action_result.parameter.resource",
          "data_type": "string",
          "example_values": [
            "events"
          ],
          "contains": [
            "crits resource"
          ]
        },
        {
          "data_path": "action_result.parameter.post_data",
          "data_type": "string",
          "example_values": [
            "{\"event_type\": \"Sniffing\", \"title\": \"Title\", \"description\": \"Desciption\"}"
          ]
        },
        {
          "data_path": "action_result.parameter.confidence",
          "data_type": "string",
          "example_values": [
            "low"
          ]
        },
        {
          "data_path": "action_result.summary",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric",
          "example_values": [
            1
          ]
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric",
          "example_values": [
            1
          ]
        }
      ],
      "versions": "EQ(*)"
    }
  ]
}